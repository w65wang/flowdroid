<!--
 Targets for working from terminal window:
       build (default) - generates java files and compiles them
       clean           - removes all generated files and class files
-->
<project name="Bytecode backend" default="gen" basedir=".">

<!-- "package" is the directory where generated files will be stored -->
<property name="package" value="AST"/>

<!-- "tools" is the directory where generators and libraries are located. -->
<property name="tools" value="../../Java1.4Frontend/tools"/>

<property name="Refactoring" value="../../Refactoring"/>
<property name="ControlFlowGraph" value="../../ControlFlowGraph"/>
	
<!-- "jflex" is an ant task class for the scanner generator in JFlex.jar -->
<taskdef name="jflex" classname="JFlex.anttask.JFlexTask" classpath="../../Java1.4Frontend/tools/JFlex.jar"/>
<!-- "beaver" is an ant task class for the parser generator in beaver.jar -->
<taskdef name="beaver" classname="beaver.comp.run.AntTask" classpath="../../Java1.4Frontend/tools/beaver.jar"/>
<!-- "jastadd" is an ant task class in jastadd2.jar -->
<taskdef name="jastadd" classname="jastadd.JastAddTask" classpath="../../Java1.4Frontend/tools/jastadd2.jar"/>

<!-- compile sources -->
<target name="build" depends="gen">
	  <!-- compile sources compiler="jikes" nowarn="true"-->
	  <javac debug="true" nowarn="true" srcdir="." sourcepath="" classpath=".:${tools}/beaver-rt.jar:${tools}/junit.jar"
	         fork="true">
    <include name ="*.java"/>
	    <include name ="AST/*.java"/>
	    <include name ="bytecode/**/*.java"/>
	    <include name ="parser/**/*.java"/>
	    <include name ="server/**/*.java"/>
	    <include name ="beaver/**/*.java"/>
	  </javac>
</target>
	
<!-- generate compiler source files -->
<target name="gen" depends="scanner,parser">
  <!-- create AST node types and weave aspect modules -->
	<jastadd package="${package}" rewrite="true" beaver="true" noVisitCheck="true" noCacheCycle="true" noComponentCheck="true"
		outdir="${basedir}" lazyMaps="true" suppressWarnings="false" parentInterface="false" noStatic="false">
		<!-- noStatic was turned off, as the refactorings did not work, e.g. for extract class with encapsulate
			on for our test case test1 -->
	   	<!-- dependencies:
			can depend on Frontends, Backends, Refactoring, ControlFlow, plugin
			prefer Refactoring to Backends as we dont't want Refactoring to depend on Backends
		-->
		<fileset dir="../../Java1.4Frontend">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
			<exclude name="BytecodeAttributes.jrag"/>
			<exclude name="BytecodeDescriptor.jrag"/>
			<exclude name="BytecodeReader.jrag"/>
		</fileset>
		<fileset dir="../../Java1.5Frontend">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
		<fileset dir="../../Java1.4Backend">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
			<exclude name="FlushCaches.jrag"/>
		</fileset>
		<fileset dir="../../Java1.5Backend">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
		<fileset dir="../../org.jastadd.plugin/src">
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
		</fileset>
		<fileset dir="${ControlFlowGraph}">
			<include name="Alias.jrag"/>
			<include name="ControlFlowGraph.jrag"/>
			<include name="DotGeneration.jrag"/>
			<include name="Exceptions.jrag"/>
			<include name="Nodes.ast"/>
			<include name="ReachingDefinitions.jrag"/>
			<include name="Sets.jrag"/>
		</fileset>
		<!-- Refactoring project -->
		<fileset dir="${Refactoring}/util">
		        <include name="**/*.ast"/>
		        <include name="**/*.jrag"/>
		        <include name="**/*.jadd"/>
			<exclude name="ASTReplace.jrag"/>
		</fileset>
		<fileset dir="${Refactoring}">
		        <include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
			<exclude name="tests/**"/>
			<exclude name="util/**"/>
			<exclude name="parser/**"/>
			<exclude name="scanner/**"/>
			<exclude name="JRRT.java"/>
			<exclude name="Locks/*"/>
			<exclude name="undo/NoUndo.jrag"/>
			<exclude name="AccessibilityConstraints/SolverChoco.jrag"/>
			<exclude name="TypeConstraints/TypeConstraintSolving.jrag"/>
			<exclude name="TypeConstraints/CollectTypeConstraints.jrag"/>
		</fileset>
  		<fileset dir="${Refactoring}">
  			<include name="TypeConstraints/TypeConstraintSolving.jrag"/>
			<include name="TypeConstraints/CollectTypeConstraints.jrag"/>
  		</fileset>
		<fileset dir=".">
			<include name="**/*.ast"/>
			<include name="**/*.jrag"/>
			<include name="**/*.jadd"/>
			<exclude name="**/ASTUtil.jrag"/>
		</fileset>
  </jastadd>
  <!-- copy library files-->
  <copy todir="beaver" preservelastmodified="true">
    <fileset dir="../../Java1.4Frontend/beaver">
      <include name="**/*.java"/>
    </fileset>
  </copy>
</target>

<target name="scanner">
    <mkdir dir="scanner"/>
		<!-- compose the scanner -->
		<concat destfile="scanner/JavaScanner.flex" binary="true" force="false">
	  <filelist dir=".">
        <file name="preamble.flex"/>
      </filelist>
      <filelist dir="../../Java1.4Frontend/scanner">
        <file name="macros.flex"/>
        <file name="rules_preamble.flex"/>
      </filelist>
      <filelist dir=".">
        <file name="WhiteSpace.flex"/>
        <file name="Comments.flex"/>
      </filelist>
      <filelist dir="../../Java1.4Frontend/scanner">
		<file name="Keywords.flex"/>
        <file name="Literals.flex"/>
        <file name="Separators.flex"/>
        <file name="Operators.flex"/>
        <file name="Identifiers.flex"/>
        <file name="postamble.flex"/>
      </filelist>
    </concat>
	  <!-- generate the scanner -->
		<echo message = "Running jflex"/>
		<jflex file="scanner/JavaScanner.flex" outdir="scanner" nobak="yes"/>
    <copy todir="scanner" file="../../Java1.4Frontend/scanner/Unicode.java" preservelastmodified="true"/>
</target>

<target name="parser">
    <mkdir dir="parser"/>
	<!-- generate the parser phase 1, create a full .lalr specification from fragments-->
		<echo message = "Running parser phase 1"/>
		<concat destfile="parser/JavaParser.all" binary="true" force="false">
	    <filelist dir=".">
	      <file name="preamble.parser"/>
	    </filelist>
	    <filelist dir="../../Java1.4Frontend">
	      <file name="parser/java14.parser"/>
	    </filelist>
	    <fileset dir=".">
	      <include name="*.parser"/>
	      <exclude name="preamble.parser"/>
	    </fileset>
	 	</concat>
	<!-- generate the parser phase 2, translating .lalr to .beaver -->
		<java fork="true" dir="${basedir}" classpath="${tools}/JastAddParser.jar:${tools}/beaver-rt.jar" classname="Main">
			<arg line="parser/JavaParser.all parser/JavaParser.beaver"/>
		</java>
	<!-- generate the parser phase 3, translating .beaver to .java -->
	<beaver file="parser/JavaParser.beaver" terminalNames="yes" compress="no" useSwitch="yes"/>
</target>

<!-- remove .class files also -->
<target name="clean" depends="cleanGen">
    <!-- delete all .class files recursively -->
    <delete>
      <fileset dir="." includes="**/*.class"/>
    </delete>
</target>
	
<!-- remove generated source files -->
<target name="cleanGen">
    <delete dir="${package}"/>
    <delete dir="beaver"/>
    <delete dir="bytecode"/>
    <delete dir="parser"/>
    <delete dir="scanner"/>
</target>

<target name="jar" depends="build">
  <jar destfile="JavaCompiler.jar" basedir="." includes="**/*.class" excludes="test/** sun/** executiontests/**">
    <manifest>
      <attribute name="Main-Class" value="JavaCompiler"/>
    </manifest>
  </jar>
</target>


<!-- build a jar for use with astgen test suite -->
<!-- <target name="testjar">
  <jar destfile="org.jastadd.refactoring.jar" basedir="../bin">
    <include name="AST/*.class"/>
    <include name="beaver/*.class"/>
    <include name="parser/*.class"/>
    <include name="scanner/*.class"/>
    <include name="../../Refactoring/tests/TestHelper*.class"/>
  </jar>
</target> -->

<target name="test" depends="build">
        <java classname="RunTests" classpath="." fork="true" dir="executiontests"/>
</target>

<!-- build a source distribution -->
<target name="source" depends="build">
  <jar destfile="BytecodeBackend-src.jar">
			<fileset dir="..">
        <!-- include backend source file -->
				<include name="BytecodeBackend/JavaCompiler.java"/>
				<include name="BytecodeBackend/**/*.ast"/>
				<include name="BytecodeBackend/**/*.jrag"/>
				<include name="BytecodeBackend/**/*.jadd"/>
        <!-- include buildfile used to build the backend -->
				<include name="BytecodeBackend/build.xml"/>
        <!-- include readme and licence -->
				<include name="BytecodeBackend/README"/>
				<include name="BytecideBackend/licences/BSD"/>
			</fileset>
      <manifest>
      </manifest>
  </jar>
</target>

<target name="bootstrap" depends="jar" >
  <fileset dir="." id="source.files">
    <!-- include generated source file -->
    <include name="JavaCompiler.java"/>
    <include name="AST/*.java"/>
    <include name="beaver/*.java"/>
    <include name="bytecode/*.java"/>
    <include name="parser/*.java"/>
  </fileset>
  <pathconvert pathsep=" " property="sources" refid="source.files"/>
  <echo message="Building using javac compiled java compiler"/>
  <java jar="JavaCompiler.jar" fork="true" maxmemory="256M">
    <arg line="-classpath . ${sources}"/>
  </java>
  <jar destfile="JavaCompiler-bootstrapped.jar" basedir="." includes="**/*.class" excludes="test/** sun/** executiontests/**">
    <manifest>
      <attribute name="Main-Class" value="JavaCompiler"/>
    </manifest>
  </jar>
  <echo message="Building using bootstrapped java compiler"/>
  <java jar="JavaCompiler-bootstrapped.jar" fork="true" maxmemory="256M">
    <arg line="-classpath . ${sources}"/>
  </java>
  <jar destfile="JavaCompiler-bootstrapped.jar" basedir="." includes="**/*.class" excludes="test/** sun/** executiontests/**">
    <manifest>
      <attribute name="Main-Class" value="JavaCompiler"/>
    </manifest>
  </jar>
</target>

</project>


Arguments: 
-jastaddframework
-debug
-d
classes
-instance-module
m1
m1.module
m2.module
A.java
B.java
Main.java
../testlib/jastadd$framework.module
End arguments
----------Module contents----------
------m1.module------
module m1;
import own m2 as m2a;
import own m2 as m2b;
import own m2 as m2new;
merge m2a, m2b as m2merged;
import own m2 as m2new2;
------------------------
------B.java------
module: module m2;;
module CU : m2.module
module name : m2
------------------------
------m2.module------
module m2;
------------------------
------Main.java------
module: null;
module CU : null
module name : null
------------------------
------A.java------
module: module m1;;
module CU : m1.module
module name : m1
------------------------
------../testlib/jastadd$framework.module------
module jastadd$framework;
------------------------
----------CU AST before insert----------
module: m1, file: m1.module, base module: m1
B.java package:
module: m2, file: m2.module, base module: m2
Main.java package:
A.java package:
module: jastadd$framework, file: ../testlib/jastadd$framework.module, base module: jastadd$framework
----------CU AST after insert----------
module: m1, file: m1.module, base module: m1
	A.java package:m1
module: m2, file: m2.module, base module: m2
	B.java package:m2
Main.java package:
module: jastadd$framework, file: ../testlib/jastadd$framework.module, base module: jastadd$framework
----------Module CU imports before import own----------
module m1, base:m1, context:[], instantiated:false
module m2, base:m2, context:[], instantiated:false
module jastadd$framework, base:jastadd$framework, context:[], instantiated:false
-------------Instance ModuleCompilationUnit------------
module m1;
import own m2 as m2a;
import own m2 as m2b;
import own m2 as m2new;
merge m2a, m2b as m2merged;
replace m2merged with m2new;
import own m2 as m2new2;
replace m2b with m2new2;
export package *;
import  jastadd$framework as none null;
-----------End Instance ModuleCompilationUnit----------
----------CU AST after generateImportOwn----------
module: m1, file: m1.module, base module: m1
	A.java package:m1
module: m2, file: m2.module, base module: m2
	B.java package:m2
Main.java package:
module: jastadd$framework, file: ../testlib/jastadd$framework.module, base module: jastadd$framework
module: m1$m2new, file: m2.module, base module: m2
	B.java package:m1$m2new
module: m1$m2new2, file: m2.module, base module: m2
	B.java package:m1$m2new2

----------Module CU imports after import own----------
module m1, base:m1, context:[], instantiated:true
	jastadd$framework:jastadd$framework
	m2a:m1$m2new
	m2b:m1$m2new2
	m2merged:m1$m2new
	m2new:m1$m2new
	m2new2:m1$m2new2
module m2, base:m2, context:[], instantiated:false
module jastadd$framework, base:jastadd$framework, context:[], instantiated:true
module m1$m2new, base:m2, context:[m1], instantiated:true
	jastadd$framework:jastadd$framework
module m1$m2new2, base:m2, context:[m1], instantiated:true
	jastadd$framework:jastadd$framework
----------MCU collectTypes after import own----------

Module: m1
	m1.A
Module: m2
	m2.B
Module: jastadd$framework
Module: m1$m2new
	m1$m2new.B
Module: m1$m2new2
	m1$m2new2.B

----------CU iterator----------
m1.module, A.java, m2.module, Main.java, ../testlib/jastadd$framework.module, m2.module, B.java, m2.module, B.java
m1.module:14:
  WARNING: The module reference m2b is already merged. It is advisable to use the merged reference instead: 
	merge m2a, m2b as m2merged;
which is declared in module m1

// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.
// Jad home page: http://www.kpdus.com/jad.html
// Decompiler options: packimports(3) 
// Source File Name:   A.ast

package m1;

import jastadd$framework.ASTNode;
import m1$m4alias.D;

public class A extends ASTNode
{

    public D getD1()
    {
        return (D)getChild(0);
    }

    public D getD1NoTransform()
    {
        return (D)getChildNoTransform(0);
    }

    public void setD1(D node)
    {
        setChild(node, 0);
    }

    public D getD2()
    {
        return (D)getChild(1);
    }

    public D getD2NoTransform()
    {
        return (D)getChildNoTransform(1);
    }

    public void setD2(D node)
    {
        setChild(node, 1);
    }

    public D getD3()
    {
        return (D)getChild(2);
    }

    public D getD3NoTransform()
    {
        return (D)getChildNoTransform(2);
    }

    public void setD3(D node)
    {
        setChild(node, 2);
    }

    public A(D p0, D p1, D p2)
    {
        is$Final = true;
        setChild(p0, 0);
        setChild(p1, 1);
        setChild(p2, 2);
    }

    public A()
    {
        is$Final = true;
    }

    protected void init$children()
    {
        children = new ASTNode[3];
    }

    public ASTNode rewriteTo()
    {
        return super.rewriteTo();
    }

    public Object clone()
        throws CloneNotSupportedException
    {
        A node = (A)super.clone();
        node.inCircle = false;
        node.is$Final = false;
        return node;
    }

    public int getNumChild()
    {
        return 3;
    }

    public boolean mayHaveRewrite()
    {
        return false;
    }
}

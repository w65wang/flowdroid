/*
 * @(#)SVGPropertiesPanel.java  1.0  22. April 2007
 *
 * Copyright (c) 2007 by the original authors of JHotDraw
 * and all its contributors.
 * All rights reserved.
 *
 * The copyright of this software is owned by the authors and  
 * contributors of the JHotDraw project ("the copyright holders").  
 * You may not use, copy or modify this software, except in  
 * accordance with the license agreement you entered into with  
 * the copyright holders. For details see accompanying license terms. 
 */

package org.jhotdraw.samples.svg;

import java.awt.*;
import javax.swing.*;
import org.jhotdraw.draw.*;
import org.jhotdraw.gui.*;
import org.jhotdraw.util.*;
import static org.jhotdraw.samples.svg.SVGAttributeKeys.*;

/**
 * The SVGPropertiesPanel allows to edit properties (attributes and other things)
 * of a SVGFigure.
 *
 * @author Werner Randelshofer
 * @version 1.0 22. April 2007 Created.
 */
public class SVGPropertiesPanel extends javax.swing.JPanel {
    private ResourceBundleUtil labels = ResourceBundleUtil.getLAFBundle("org.jhotdraw.samples.svg.Labels");
    private DrawingEditor editor;
    private JDoubleAttributeSlider opacitySlider;
    
    /** Creates new instance. */
    public SVGPropertiesPanel() {
        initComponents();
        
        opacitySlider = new JDoubleAttributeSlider(JSlider.VERTICAL, 0, 100, 100);
        opacityPopupButton.add(opacitySlider);
        opacityPopupButton.putClientProperty("JButton.buttonType","toolbar");
        add(opacityPopupButton);
        
        opacityField.setAttributeKey(OPACITY);
        opacitySlider.setAttributeKey(OPACITY);
        opacitySlider.setScaleFactor(100d);
        opacityField.setScaleFactor(100d);
        opacityField.setMinimum(0d);
        opacityField.setMaximum(100d);
        linkField.setAttributeKey(LINK);
        
        // set fonts
        Font font = getFont().deriveFont(11f);
        for (Component c : getComponents()) {
            c.setFont(font);
        }
        opacitySlider.setFont(font);
    }
    
    public void setEditor(DrawingEditor editor) {
        this.editor = editor;
        linkField.setEditor(editor);
        opacitySlider.setEditor(editor);
        opacityField.setEditor(editor);
    }
    
    public void setView(DrawingView view) {
        opacityField.setView(view);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        linkLabel = new javax.swing.JLabel();
        linkField = new org.jhotdraw.gui.JStringAttributeField();
        opacityLabel = new javax.swing.JLabel();
        opacityField = new org.jhotdraw.gui.JDoubleAttributeField();
        opacityPopupButton = new org.jhotdraw.gui.JPopupButton();

        setLayout(new java.awt.GridBagLayout());

        setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        linkLabel.setLabelFor(linkField);
        linkLabel.setText(labels.getString("link"));
        add(linkLabel, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(linkField, gridBagConstraints);

        opacityLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/jhotdraw/draw/action/images/attributeOpacity.png")));
        opacityLabel.setToolTipText(labels.getString("opacity"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        add(opacityLabel, gridBagConstraints);

        opacityField.setColumns(3);
        add(opacityField, new java.awt.GridBagConstraints());

        opacityPopupButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/jhotdraw/draw/action/images/popupIcon.png")));
        add(opacityPopupButton, new java.awt.GridBagConstraints());

    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jhotdraw.gui.JStringAttributeField linkField;
    private javax.swing.JLabel linkLabel;
    private org.jhotdraw.gui.JDoubleAttributeField opacityField;
    private javax.swing.JLabel opacityLabel;
    private org.jhotdraw.gui.JPopupButton opacityPopupButton;
    // End of variables declaration//GEN-END:variables
    
}
